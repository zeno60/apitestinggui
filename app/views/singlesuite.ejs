<html ng-app="testApp">
<head>
    <title><%= title %></title>

    <link rel="stylesheet" type="text/css" href="/css/main.css">

    <script src="/js/angular/angular.js"></script>
</head>

<body>

    <div id="body">
        <div id="header">header</div>
        <div id="main">
            <div id="mainLeft">
                <a href="/suite/"> go to suite view</a>
            </div>
            <div id="mainWrapper">
                <div id="mainWrapperLeft">
                    <div ng-controller="getTestSuiteController">

                        <div class="label-heading">
                            Global Variables
                        </div>

                        <div class="label-heading-2" ng-repeat="(key, value) in testSuite.variables.global">
                            <code ng-non-bindable>{</code>{{ key }}<code ng-non-bindable>}</code> will be replaced with "{{ value }}"
                        </div>

                        <div class="label-heading">
                            Tests
                        </div>

                        <div id="testContainer" ng-repeat="test in testSuite.tests">

                            <div ng-switch on="test.testStatus">
                                <div ng-switch-when="passed">
                                    <div style="float: right;">
                                        <img src="/img/check_mark.png" />
                                    </div>
                                </div>
                                <div ng-switch-when="failed">
                                    <div style="float: right;">
                                        <img src="/img/cross_mark.png" />
                                    </div>
                                </div>
                                <div ng-switch-default>
                                    <!-- not running -->
                                </div>
                            </div>

                            <div class="label-heading">
                                {{ test.testName }}
                            </div>

                            <div class="label-heading">
                                Assertions
                            </div>

                            <div ng-repeat="assertion in test.assertions">
                                <div ng-switch on="assertion.type">
                                    <div ng-switch-when="responseCode">
                                        <div class="label-heading-2">
                                            Response Code should equal {{ assertion.expectedResponseCode }} <br />
                                            Status: {{ assertion.status }} <br />
                                        </div>
                                    </div>
                                    <div ng-switch-when="responseBody">
                                        <div class="label-heading-2">
                                            Response parameter {{ assertion.responseBodyParameter }} should equal {{ assertion.expectedValue }} <br />
                                            Status: {{ assertion.status }} <br />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <input type="button" class="button-style-1" value="run this suite in browser" ng-click="runTestSuite()"/>

                        <input type="button" class="button-style-1" value="run this suite in backend" ng-click="runTestSuiteBackend()" />

                        <br />
                    </div>
                </div>
                <div id="mainWrapperRight">
                   mainWrapperRight
                </div>
            </div>
        </div>
        <div id="footer">footer</div>
    </div>

<script>
    var resolveInputVariables = function(field, variables) {
        var returnField = field;
        angular.forEach(variables, function (value, key) {
            var keyField = '\{' + key + '\}';
            returnField = returnField.replace(new RegExp(keyField, 'g'), value);
        });
        return returnField;
    };


    var app = angular.module("testApp", []);

    app.controller("getTestSuiteController", function($scope, $http) {
        $scope.testSuite = {};

        $scope.response = {};

        $scope.runTestSuiteBackend = function() {
            $http.post('/suite/' + $scope.testSuite._id).success(function(data) {
                $scope.testSuite = data;
            });
        }

        $scope.runTestSuite = function() {

            // store output variables between tests
            var testOutputVariables = {};
            var maxTests = $scope.testSuite.tests.length;
            var testCount = 0;

            var executeTest = function(test) {
                testCount++;

                var url = test.url;

                if(!(test.variables === undefined) && !(test.variables.input === undefined)) {
                    url = resolveInputVariables(test.url, test.variables.input);
                }

                if(!($scope.testSuite.variables === undefined) && !($scope.testSuite.variables.global === undefined)) {
                    url = resolveInputVariables(url, $scope.testSuite.variables.global);
                }

                url = resolveInputVariables(url, testOutputVariables);

                var headers = {};
                angular.forEach(test.headers, function(value, key) {
                    var headerValue = value;

                    if(!(test.variables === undefined) && !(test.variables.input === undefined)) {
                        headerValue = resolveInputVariables(headerValue, test.variables.input);
                    }

                    if(!($scope.testSuite.variables === undefined) && !($scope.testSuite.variables.global === undefined)) {
                        headerValue = resolveInputVariables(headerValue, $scope.testSuite.variables.global);
                    }

                    headers[key] = headerValue;
                });



                var request = {
                    url: url,
                    method: test.httpMethod,
                    data: test.body,
                    headers: {
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Headers': '*'
                    }
                };

                var assertResponse = function(data, status, headers, config) {

                    if(!(test.variables === undefined)) {
                        angular.forEach(test.variables.output, function (value, key) {

                            var tempData = data;
                            var split = value.split('.');
                            for (var i = 0; i < split.length; i++) {
                                tempData = tempData[split[i]];
                            }

                            testOutputVariables[key] = tempData;
                        });
                    }

                    var testFailed = false;

                    for(var i = 0; i < test.assertions.length; i++) {
                        var assertion = test.assertions[i];
                        var assertionFailed = false;

                        assertion.status = "running";

                        if(assertion.type == 'responseCode') {
                            if(assertion.expectedResponseCode != status) {
                                assertionFailed = true;
                                assertion.error = "expected response code did not match";
                            }
                        }
                        else if(assertion.type == 'responseBody') {

                            var tempData = data;
                            var split = assertion.responseBodyParameter.split('.');
                            for (var i = 0; i < split.length; i++) {
                                tempData = tempData[split[i]];
                            }

                            if(tempData != assertion.expectedValue) {
                                assertionFailed = true;
                                assertion.error = "response body parameter did not match";
                            }
                        }

                        if(assertionFailed) {
                            testFailed = true;
                            assertion.status = "failed";
                        }
                        else {
                            assertion.status = "passed";
                        }
                    }

                    if(testFailed) {
                        test.testStatus = "failed";
                    }
                    else {
                        test.testStatus = "passed";
                    }

                    if(testCount < maxTests) {
                        executeTest($scope.testSuite.tests[testCount]);
                    }
                }

                $http(request).success(assertResponse).error(assertResponse);
            }

            if(testCount < maxTests) {
                executeTest($scope.testSuite.tests[testCount]);
            }

            //for(var testCount = 0; testCount < maxTests; testCount++) {
                /*
                var test = $scope.testSuite.tests[i];
                test.testStatus = "running";
                var url = test.url;

                if(!(test.variables === undefined) && !(test.variables.input === undefined)) {
                    url = resolveInputVariables(test.url, test.variables.input);
                }

                if(!($scope.testSuite.variables.global === undefined)) {
                    url = resolveInputVariables(url, $scope.testSuite.variables.global);
                }

                url = resolveInputVariables(url, testOutputVariables);

                var headers = {};

                angular.forEach(test.headers, function(value, key) {
                    var headerValue = value;
                    if(!(test.variables === undefined) && !(test.variables.input === undefined)) {
                        headerValue = resolveInputVariables(headerValue, test.variables.input);
                    }

                    headerValue = resolveInputVariables(headerValue, $scope.testSuite.variables.global);

                    headers[key] = headerValue;
                });

                var request = {
                    url: url,
                    method: test.httpMethod,
                    data: test.body,
                    headers: headers
                };

                var assertResponse = function(data, status, headers, config) {

                    angular.forEach(test.variables.output, function(value, key) {

                        var tempData = data;
                        var split = value.split('.');
                        for(var i = 0; i < split.length; i++){
                            tempData = tempData[split[i]];
                        }

                        testOutputVariables[key] = tempData;
                        alert(testOutputVariables[key]);
                    });

                    var testFailed = false;

                    for(var i = 0; i < test.assertions.length; i++) {
                        var assertion = test.assertions[i];
                        var assertionFailed = false;

                        assertion.status = "running";

                        if(assertion.type == 'responseCode') {
                            if(assertion.expectedResponseCode != status) {
                                assertionFailed = true;
                                assertion.error = "expected response code did not match";
                            }
                        }
                        else if(assertion.type == 'responseBody') {
                            if(data[assertion.responseBodyParameter] != assertion.expectedValue) {
                                assertionFailed = true;
                                assertion.error = "response body parameter did not match";
                            }
                        }

                        if(assertionFailed) {
                            testFailed = true;
                            assertion.status = "failed";
                        }
                        else {
                            assertion.status = "passed";
                        }
                    }

                    if(testFailed) {
                        test.testStatus = "failed";
                    }
                    else {
                        test.testStatus = "passed";
                    }
                }

                $http(request).success(assertResponse).error(assertResponse);
                */
            //}



            /*var url = resolveInputVariables(testInput.url, testInput.variables.input);
            var headers = {};
            angular.forEach(testInput.headers, function(value, key) {
                var headerValue = resolveInputVariables(value, testInput.variables.input);
                headers[key] = headerValue;
            });

            var test = $http.get('http://localhost:1337/test');*/
        };

        // dont automatically get tests within a test suite,
        // list them out and make them clickable (lazy load)

        $scope.init = function() {
            $http.get('/suite/' + '<%= suiteId%>' + '?responseFormat=json').success(function(data) {
                $scope.testSuite = data;

                angular.forEach($scope.testSuite.tests, function(test) {
                    $http.get('/test/' + test._id).success(function(data) {
                        angular.extend(test, data);
                    });
                });
            });
        };

        $scope.init();
    });

</script>

</body>
</html>